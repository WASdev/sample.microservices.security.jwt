<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>net.wasdev.wlp.sample</groupId>
		<artifactId>jwtSample</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>


	<artifactId>jwtSample-keystores</artifactId>
	<version>1.0-SNAPSHOT</version>

	<name>jwtSample-keystores</name>

	<packaging>jar</packaging>

	<url>http://maven.apache.org</url>

	<profiles>
		<profile>
			<id>KeyStores-Not-Needed</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.4</version>
						<executions>
							<execution>
								<id>Keystores-not-needed</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<echo>Keystore generation not required.</echo>
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>KeyStores-Needed</id>
			<activation>
				<file>
					<missing>keystores-built.marker</missing>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
						<version>1.4.1</version>
						<executions>
							<execution>
								<id>enforce-JAVA_HOME-set</id>
								<phase>initialize</phase>
								<goals>
									<goal>enforce</goal>
								</goals>
								<configuration>
									<rules>
										<requireEnvironmentVariable>
											<level>ERROR</level>
											<variableName>JAVA_HOME</variableName>
											<message>Keystore generation requires JAVA_HOME to be set for import of cacerts</message>
										</requireEnvironmentVariable>
									</rules>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.4</version>
						<executions>
							<execution>
								<id>Keystores-needed</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<echo>Keystore generation in progress.</echo>
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>keytool-maven-plugin</artifactId>
						<version>1.5</version>
						<executions>
							<execution>
								<id>create-ca</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>generateKeyPair</goal>
								</goals>
								<configuration>
									<keystore>${keystores.build.directory}/castore.jks</keystore>
									<storepass>ca-pass</storepass>
									<keypass>ca-pass</keypass>
									<alias>jwtsampleca</alias>
									<dname>cn=JwtSampleCA, ou=Ficticious CA, L=Earth, ST=Happy,
										o=Example, c=CA</dname>
									<keyalg>RSA</keyalg>
									<keysize>2048</keysize>
									<sigalg>SHA1withRSA</sigalg>
									<!-- <ext>KeyUsage="keyCertSign"</ext> -->
									<ext>BasicConstraints:"critical=ca:true"</ext>
									<validity>100</validity>
								</configuration>
							</execution>
							<execution>
								<id>export-ca</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>exportCertificate</goal>
								</goals>
								<configuration>
									<keystore>${keystores.build.directory}/castore.jks</keystore>
									<storepass>ca-pass</storepass>
									<keypass>ca-pass</keypass>
									<alias>jwtsampleca</alias>
									<file>${keystores.build.directory}/ca.crt</file>
								</configuration>
							</execution>
							<execution>
								<id>generate-app-cert</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>generateKeyPair</goal>
								</goals>
								<configuration>
									<keystore>${keystores.build.directory}/key.jks</keystore>
									<storepass>app-pass</storepass>
									<keypass>app-pass</keypass>
									<alias>jwtsampleapp</alias>
									<dname>cn=JwtSample, ou=Sample App, L=Earth, ST=Happy,
										o=Example,
										c=CA</dname>
									<keyalg>RSA</keyalg>
									<keysize>2048</keysize>
									<sigalg>SHA1withRSA</sigalg>
									<ext>KeyUsage="keyCertSign"</ext>
									<ext>BasicConstraints:"critical=ca:true"</ext>
									<validity>100</validity>
								</configuration>
							</execution>
							<execution>
								<id>generate-csr</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>generateCertificateRequest</goal>
								</goals>
								<configuration>
									<keystore>${keystores.build.directory}/key.jks</keystore>
									<storepass>app-pass</storepass>
									<keypass>app-pass</keypass>
									<alias>jwtsampleapp</alias>
									<file>${keystores.build.directory}/signrequest.csr</file>
								</configuration>
							</execution>
							<execution>
								<id>sign-csr</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>generateCertificate</goal>
								</goals>
								<configuration>
									<keystore>${keystores.build.directory}/castore.jks</keystore>
									<storepass>ca-pass</storepass>
									<keypass>ca-pass</keypass>
									<alias>jwtsampleca</alias>
									<infile>${keystores.build.directory}/signrequest.csr</infile>
									<outfile>${keystores.build.directory}/signedrequest.crt</outfile>
								</configuration>
							</execution>
							<execution>
								<id>import-ca-cert-to-trust</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>importCertificate</goal>
								</goals>
								<configuration>
									<keystore>${keystores.build.directory}/truststore.jks</keystore>
									<storepass>trust-pass</storepass>
									<keypass>trust-pass</keypass>
									<alias>jwtsampleca</alias>
									<noprompt>true</noprompt>
									<file>${keystores.build.directory}/ca.crt</file>
									<trustcacerts>true</trustcacerts>
								</configuration>
							</execution>
							<execution>
								<id>import-ca-cert-to-key</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>importCertificate</goal>
								</goals>
								<configuration>
									<keystore>${keystores.build.directory}/key.jks</keystore>
									<storepass>app-pass</storepass>
									<keypass>app-pass</keypass>
									<alias>jwtsampleca</alias>
									<noprompt>true</noprompt>
									<file>${keystores.build.directory}/ca.crt</file>
									<trustcacerts>true</trustcacerts>
								</configuration>
							</execution>
							<execution>
								<id>import-signed-cert</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>importCertificate</goal>
								</goals>
								<configuration>
									<keystore>${keystores.build.directory}/key.jks</keystore>
									<storepass>app-pass</storepass>
									<keypass>app-pass</keypass>
									<alias>jwtsampleapp</alias>
									<noprompt>true</noprompt>
									<file>${keystores.build.directory}/signedrequest.crt</file>
									<trustcacerts>true</trustcacerts>
								</configuration>
							</execution>
							<execution>
								<id>export-appcert</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>exportCertificate</goal>
								</goals>
								<configuration>
									<keystore>${keystores.build.directory}/key.jks</keystore>
									<storepass>app-pass</storepass>
									<keypass>app-pass</keypass>
									<alias>jwtsampleapp</alias>
									<file>${keystores.build.directory}/app.crt</file>
								</configuration>
							</execution>	
							<execution>
								<id>import-app-cert-to-trust</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>importCertificate</goal>
								</goals>
								<configuration>
									<keystore>${keystores.build.directory}/truststore.jks</keystore>
									<storepass>trust-pass</storepass>
									<keypass>trust-pass</keypass>
									<alias>jwtsampleapp</alias>
									<noprompt>true</noprompt>
									<file>${keystores.build.directory}/app.crt</file>
									<trustcacerts>true</trustcacerts>
								</configuration>
							</execution>
							<execution>
								<id>import-jvm-ca-certs</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>importKeystore</goal>
								</goals>
								<configuration>
									<srckeystore>${JAVA_HOME}/jre/lib/security/cacerts</srckeystore>
									<srcstorepass>changeit</srcstorepass>
									<destkeystore>${keystores.build.directory}/truststore.jks</destkeystore>
									<deststorepass>trust-pass</deststorepass>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.4</version>
						<executions>
							<execution>
								<id>Keystores-done</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<touch file="keystores-built.marker" />
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>

				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.6.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>${project.basedir}</directory>
							<includes>
								<include>keystores-built.marker</include>
							</includes>
							<followSymlinks>false</followSymlinks>
						</fileset>
						<fileset>
							<directory>${keystores.build.directory}</directory>
							<includes>
								<include>ca.crt</include>
								<include>castore.jks</include>
								<include>key.jks</include>
								<include>signrequest.csr</include>
								<include>signedrequest.crt</include>
							</includes>
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>