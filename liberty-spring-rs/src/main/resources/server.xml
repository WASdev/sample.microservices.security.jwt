<?xml version="1.0" encoding="UTF-8"?>
<server description="signed jwt rs server">
    <featureManager>
        <feature>ssl-1.0</feature>
        <feature>jsp-2.2</feature>
        <feature>jwt-1.0</feature>
        <feature>servlet-3.0</feature>
        <feature>appSecurity-2.0</feature>
        <feature>openidConnectClient-1.0</feature>
    </featureManager>

    <httpEndpoint id="defaultHttpEndpoint"
                  host="*"
                  httpPort="9080"
                  httpsPort="9443"/>

    <jwtConsumer id="rpConsumer"
                 signatureAlgorithm="RS256"
                 issuer="https://thesamplerp/"
                 trustStoreRef="defaultTrustStore"
                 trustedAlias="jwtsampleapp"
    />

    <!-- default ssl config.. The trust store here does not need anything special.
    -->
    <keyStore id="defaultKeyStore" password="app-pass" location="${server.config.dir}/key.jks"/>
    <keyStore id="defaultTrustStore" password="trust-pass" location="${server.config.dir}/truststore.jks"/>
    <!-- Configure the default keystore -->
    <ssl id="defaultSSLConfig" keyStoreRef="defaultKeyStore" trustStoreRef="defaultTrustStore"
         serverKeyAlias="jwtsampleapp"/>

    <!-- declare a reference to the trustKeyStore the app will use to verify the signed jwt-->
    <jndiEntry jndiName="trustKeyStore" value="${server.config.dir}/truststore.jks"/>
    <jndiEntry jndiName="trustKeyStorePw" value="trust-pass"/>
    <jndiEntry jndiName="trustKeyStoreAlias" value="jwtsampleapp"/>

    <!-- The microservice, not protected, because it will perform it's own
         auth based on the signed jwt flowed to it as part of the request -->
    <application type="war" id="signed-jwt-spring-rs-application" name="signed-jwt-spring-rs-application"
                 location="${server.config.dir}/apps/signed-jwt-spring-rs-application.war">
    </application>

</server>